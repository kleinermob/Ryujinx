name: Canary release job

on:
  workflow_dispatch:
    inputs: {}
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'assets/**'
      - '*.yml'
      - '*.json'
      - '*.config'
      - '*.md'

concurrency: release

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  RYUJINX_BASE_VERSION: "1.2"
  RYUJINX_TARGET_RELEASE_CHANNEL_NAME: "canary"
  RYUJINX_TARGET_RELEASE_CHANNEL_OWNER: "GreemDev"
  RYUJINX_TARGET_RELEASE_CHANNEL_REPO: "Ryujinx-Canary"
  RELEASE: 1

jobs:
  release:
    name: Release for linux-x64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Get version info
        id: version_info
        run: |
          echo "build_version=${{ env.RYUJINX_BASE_VERSION }}.${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "prev_build_version=${{ env.RYUJINX_BASE_VERSION }}.$((${{ github.run_number }} - 1))" >> $GITHUB_OUTPUT
          echo "git_short_hash=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Configure for release
        run: |
          sed -r --in-place 's/\%\%RYUJINX_BUILD_VERSION\%\%/${{ steps.version_info.outputs.build_version }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_BUILD_GIT_HASH\%\%/${{ steps.version_info.outputs.git_short_hash }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_NAME\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_NAME }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_OWNER\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_OWNER }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_TARGET_RELEASE_CHANNEL_REPO\%\%/${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_REPO }}/g;' src/Ryujinx.Common/ReleaseInformation.cs
          sed -r --in-place 's/\%\%RYUJINX_CONFIG_FILE_NAME\%\%/Config\.json/g;' src/Ryujinx.Common/ReleaseInformation.cs
        shell: bash

      - name: Create output dir
        run: mkdir -p release_output

      - name: Publish
        run: |
          dotnet publish -c Release -r linux-x64 -o ./publish -p:Version="${{ steps.version_info.outputs.build_version }}" -p:SourceRevisionId="${{ steps.version_info.outputs.git_short_hash }}" -p:DebugType=embedded src/Ryujinx --self-contained -p:IncludeNativeLibrariesForSelfExtract=true
        shell: bash

      - name: Packing Linux build
        run: |
          pushd publish
          rm libarmeilleure-jitsupport.dylib  # remove unnecessary files
          chmod +x Ryujinx.sh Ryujinx
          tar -czvf ../release_output/ryujinx-${{ steps.version_info.outputs.build_version }}-linux_x64.tar.gz .
          popd
        shell: bash

      - name: Pushing new release
        uses: ncipollo/release-action@v1
        with:
          name: "Canary ${{ steps.version_info.outputs.build_version }}"
          artifacts: "release_output/*.tar.gz"
          tag: ${{ steps.version_info.outputs.build_version }}
          body: "**Full Changelog**: https://github.com/${{ github.repository }}/compare/Canary-${{ steps.version_info.outputs.prev_build_version }}...Canary-${{ steps.version_info.outputs.build_version }}"
          omitBodyDuringUpdate: true
          allowUpdates: true
          replacesArtifacts: true
          owner: ${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_OWNER }}
          repo: ${{ env.RYUJINX_TARGET_RELEASE_CHANNEL_REPO }}
          token: ${{ secrets.RELEASE_TOKEN }}
